//created on: Jun 3, 2012
package main.solver;
	dialect "java"

//list any import classes here.
import org.drools.planner.core.score.buildin.hardandsoft.HardAndSoftScoreHolder;
import org.drools.planner.core.score.constraint.IntConstraintOccurrence;
import org.drools.planner.core.score.constraint.ConstraintType;

import main.domain.Course;
import main.domain.Day;
import main.domain.Classroom;
import main.domain.DayWeek;
import main.domain.Schedule;
import main.domain.Week;

//declare any global variables here

global HardAndSoftScoreHolder scoreHolder;


rule "classroomOccupancy"
    when
        $leftSchedule : Schedule($leftId : scheduleID, $classroom : classroom)
        //rightSchedule not being held between active time of leftSchedule
        $rightSchedule : Schedule(scheduleID > $leftId, conflictDayCheck($leftSchedule) == true, classroom.equals($classroom))
        
    then
        insertLogical(new IntConstraintOccurrence("classroomOccupancy", ConstraintType.NEGATIVE_HARD,
                1,
                $leftSchedule, $rightSchedule));
end

rule "overCapacity"
    when
        $schedule : Schedule(classroom.capacity < course.eSize)
        
    then
        insertLogical(new IntConstraintOccurrence("overCapacity", ConstraintType.NEGATIVE_HARD,
                1,
                $schedule));
end

rule "notFinishInWeek"
    when
        $schedule : Schedule( finishInWeek == false )       
    then
        insertLogical(new IntConstraintOccurrence("notFinishInWeek", ConstraintType.NEGATIVE_HARD,
                1,
                $schedule));
end

rule "pcRequirement"
    when
        $schedule : Schedule(course.PC != null, classroom.PC != course.PC)
    then
        insertLogical(new IntConstraintOccurrence("pcRequirement", ConstraintType.NEGATIVE_HARD,
                1,
                $schedule));
end

rule "hardConstraintsBroken"
        salience -1 // Do the other rules first (optional, for performance)
    when
        $hardTotal : Number() from accumulate(
            IntConstraintOccurrence(constraintType == ConstraintType.NEGATIVE_HARD, $weight : weight),
            sum($weight) // Vote for http://jira.jboss.com/jira/browse/JBRULES-1075
        )
    then
        scoreHolder.setHardConstraintsBroken($hardTotal.intValue());
end


